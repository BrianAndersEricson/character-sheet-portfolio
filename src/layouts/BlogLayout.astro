---
export interface Props {
  title: string;
  excerpt?: string;
}

const { title, excerpt } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={excerpt || "A secret blog post."} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
  </head>
  <body>
    <slot />
    <style is:global>
      :root {
        --bg-color: #f8f6f0;
        --text-color: #2a2520;
        --line-color: #4a453f;
        --accent-color: #6b6b6b;
        --accent-color-rgb: 107, 107, 107;
        --paper-shadow: rgba(0, 0, 0, 0.1);
        --code-bg: #e6e2d8;
        --code-fg: #2a2520;
      }

      [data-theme="dark"] {
        --bg-color: #1a1612;
        --text-color: #e8e6e0;
        --line-color: #8a857f;
        --accent-color: #9a9a9a;
        --accent-color-rgb: 154, 154, 154;
        --paper-shadow: rgba(255, 255, 255, 0.05);
        --code-bg: #2b2620;
        --code-fg: #f2f0eb;
      }

      * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
      }

      body {
        font-family: 'Georgia', serif;
        background-color: var(--bg-color);
        color: var(--text-color);
        line-height: 1.4;
        padding: 20px;
        transition: all 0.3s ease;
      }

      p {
        margin-bottom: 1.25em;
        line-height: 1.6;
      }

      h1, h2, h3, h4, h5, h6 {
        margin-top: 2em;
        margin-bottom: 0.5em;
        line-height: 1.3;
      }

      ul, ol {
        margin-bottom: 1.25em;
        padding-left: 1.25em;
      }

      li {
        margin-bottom: 0.5em;
        line-height: 1.5;
      }

      /* Code styling */

      code {
        background: var(--code-bg);
        color: var(--code-fg);
        padding: 0.2em 0.4em;
        border-radius: 4px;
        font-size: 0.9em;
        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
      }

      pre {
        background: var(--code-bg);
        color: var(--code-fg);
        padding: 1.5em;
        border-radius: 8px;
        overflow-x: auto;
        margin: 2em 0;
        border: 2px solid var(--accent-color);
        font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
        font-size: 0.9em;
        line-height: 1.4;
      }

      pre code {
        background: none;
        color: inherit;
        padding: 0;
        border-radius: 0;
        font-size: inherit;
      }

      blockquote {
        border-left: 4px solid var(--accent-color);
        padding: 1em 1.5em;
        margin: 1.5em 0;
        font-style: italic;
        color: var(--accent-color);
        background: rgba(var(--accent-color-rgb), 0.05);
        border-radius: 0 8px 8px 0;
      }

      /* ... (unchanged styles below this point remain as you had them) ... */

    </style>

    <script>
      // Declare global function for TypeScript
      declare global {
        interface Window {
          toggleTheme: () => void;
        }
      }

      function toggleTheme() {
        const body = document.body;
        const currentTheme = body.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

        body.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
      }

      function typeWriter() {
        const typewriterElement = document.getElementById('typewriter');
        if (!typewriterElement) return;
        const text = typewriterElement.textContent || "Your Name Here";
        typewriterElement.textContent = '';

        let i = 0;
        function type() {
          if (i < text.length && typewriterElement) {
            typewriterElement.textContent += text.charAt(i);
            i++;
            setTimeout(type, 100);
          }
        }

        setTimeout(type, 500);
      }

      document.addEventListener('DOMContentLoaded', function() {
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.body.setAttribute('data-theme', savedTheme);
        typeWriter();
      });

      window.toggleTheme = toggleTheme;
    </script>
  </body>
</html>

